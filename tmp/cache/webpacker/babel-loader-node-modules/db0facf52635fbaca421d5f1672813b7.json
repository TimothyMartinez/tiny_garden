{"ast":null,"code":"var _jsxFileName = \"/home/timartin/Desktop/wyncode/My Projects/C34_matthew_raphael_tim/app/javascript/bundles/HelloWorld/components/HelloWorld.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nvar HelloWorld =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HelloWorld, _React$Component);\n\n  /**\n   * @param props - Comes from your rails view.\n   */\n  function HelloWorld(props) {\n    var _this;\n\n    _classCallCheck(this, HelloWorld);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HelloWorld).call(this, props)); // How to set initial state in ES6 class syntax\n    // https://reactjs.org/docs/state-and-lifecycle.html#adding-local-state-to-a-class\n\n    _this.updateName = function (name) {\n      _this.setState({\n        name: name\n      });\n    };\n\n    _this.state = {\n      name: _this.props.name\n    };\n    return _this;\n  }\n\n  _createClass(HelloWorld, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Hello, \", this.state.name, \"!\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Say hello to:\"), React.createElement(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.updateName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return HelloWorld;\n}(React.Component);\n\nHelloWorld.propTypes = {\n  name: PropTypes.string.isRequired // this is passed from the Rails view\n\n};\nexport { HelloWorld as default };","map":{"version":3,"sources":["/home/timartin/Desktop/wyncode/My Projects/C34_matthew_raphael_tim/app/javascript/bundles/HelloWorld/components/HelloWorld.jsx"],"names":["PropTypes","React","HelloWorld","props","updateName","name","setState","state","e","target","value","Component","propTypes","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,U;;;;;AAKnB;;;AAGA,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN,GADiB,CAGjB;AACA;;AAJiB,UAQnBC,UARmB,GAQN,UAACC,IAAD,EAAU;AACrB,YAAKC,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACD,KAVkB;;AAKjB,UAAKE,KAAL,GAAa;AAAEF,MAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE;AAAnB,KAAb;AALiB;AAMlB;;;;6BAMQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU,KAAKE,KAAL,CAAWF,IADrB,MADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAIE;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,IAHpB;AAIE,QAAA,QAAQ,EAAE,kBAACG,CAAD;AAAA,iBAAO,MAAI,CAACJ,UAAL,CAAgBI,CAAC,CAACC,MAAF,CAASC,KAAzB,CAAP;AAAA,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CALF,CADF;AAmBD;;;;EAxCqCT,KAAK,CAACU,S;;AAAzBT,U,CACZU,S,GAAY;AACjBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBC,UADN,CACkB;;AADlB,C;SADAZ,U","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class HelloWorld extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired, // this is passed from the Rails view\n  };\n\n  /**\n   * @param props - Comes from your rails view.\n   */\n  constructor(props) {\n    super(props);\n\n    // How to set initial state in ES6 class syntax\n    // https://reactjs.org/docs/state-and-lifecycle.html#adding-local-state-to-a-class\n    this.state = { name: this.props.name };\n  }\n\n  updateName = (name) => {\n    this.setState({ name });\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>\n          Hello, {this.state.name}!\n        </h3>\n        <hr />\n        <form >\n          <label htmlFor=\"name\">\n            Say hello to:\n          </label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={(e) => this.updateName(e.target.value)}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}