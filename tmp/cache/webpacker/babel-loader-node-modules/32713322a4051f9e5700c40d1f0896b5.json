{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createReactElement;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n/* eslint-disable react/prop-types */\n\n/**\n * Logic to either call the generatorFunction or call React.createElement to get the\n * React.Component\n * @param options\n * @param options.componentObj\n * @param options.props\n * @param options.domNodeId\n * @param options.trace\n * @param options.location\n * @returns {Element}\n */\n\n\nfunction createReactElement(_ref) {\n  var componentObj = _ref.componentObj,\n      props = _ref.props,\n      railsContext = _ref.railsContext,\n      domNodeId = _ref.domNodeId,\n      trace = _ref.trace,\n      shouldHydrate = _ref.shouldHydrate;\n  var name = componentObj.name,\n      component = componentObj.component,\n      generatorFunction = componentObj.generatorFunction;\n\n  if (trace) {\n    if (railsContext && railsContext.serverSide) {\n      console.log(\"RENDERED \".concat(name, \" to dom node with id: \").concat(domNodeId));\n    } else if (shouldHydrate) {\n      console.log(\"HYDRATED \".concat(name, \" in dom node with id: \").concat(domNodeId, \" using props, railsContext:\"), props, railsContext);\n    } else {\n      console.log(\"RENDERED \".concat(name, \" to dom node with id: \").concat(domNodeId, \" with props, railsContext:\"), props, railsContext);\n    }\n  }\n\n  if (generatorFunction) {\n    return component(props, railsContext);\n  }\n\n  return _react[\"default\"].createElement(component, props);\n}","map":null,"metadata":{},"sourceType":"module"}